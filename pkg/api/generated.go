// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package api

import (
	"context"
	"time"

	"github.com/Khan/genqlient/graphql"
	"github.com/google/uuid"
)

type DeploymentStatus string

const (
	DeploymentStatusBuildPending      DeploymentStatus = "BUILD_PENDING"
	DeploymentStatusBuildInProgress   DeploymentStatus = "BUILD_IN_PROGRESS"
	DeploymentStatusBuildFailed       DeploymentStatus = "BUILD_FAILED"
	DeploymentStatusBuildSucceeded    DeploymentStatus = "BUILD_SUCCEEDED"
	DeploymentStatusDeployPending     DeploymentStatus = "DEPLOY_PENDING"
	DeploymentStatusDeployInProgress  DeploymentStatus = "DEPLOY_IN_PROGRESS"
	DeploymentStatusReleaseInProgress DeploymentStatus = "RELEASE_IN_PROGRESS"
	DeploymentStatusDeployFailed      DeploymentStatus = "DEPLOY_FAILED"
	DeploymentStatusDeploySucceeded   DeploymentStatus = "DEPLOY_SUCCEEDED"
	DeploymentStatusBuildAborted      DeploymentStatus = "BUILD_ABORTED"
	DeploymentStatusDeployStopped     DeploymentStatus = "DEPLOY_STOPPED"
	DeploymentStatusDeployHealhty     DeploymentStatus = "DEPLOY_HEALHTY"
	DeploymentStatusDeployCrashing    DeploymentStatus = "DEPLOY_CRASHING"
)

type EnvVarInput struct {
	Name  string `json:"name"`
	Value string `json:"value"`
}

// GetName returns EnvVarInput.Name, and is useful for accessing the field via an interface.
func (v *EnvVarInput) GetName() string { return v.Name }

// GetValue returns EnvVarInput.Value, and is useful for accessing the field via an interface.
func (v *EnvVarInput) GetValue() string { return v.Value }

// __buildRepoDefaultBranchInput is used internally by genqlient
type __buildRepoDefaultBranchInput struct {
	Id      uuid.UUID `json:"id"`
	NoCache bool      `json:"noCache"`
}

// GetId returns __buildRepoDefaultBranchInput.Id, and is useful for accessing the field via an interface.
func (v *__buildRepoDefaultBranchInput) GetId() uuid.UUID { return v.Id }

// GetNoCache returns __buildRepoDefaultBranchInput.NoCache, and is useful for accessing the field via an interface.
func (v *__buildRepoDefaultBranchInput) GetNoCache() bool { return v.NoCache }

// __buildRepoInput is used internally by genqlient
type __buildRepoInput struct {
	Id      uuid.UUID `json:"id"`
	Branch  string    `json:"branch"`
	NoCache bool      `json:"noCache"`
}

// GetId returns __buildRepoInput.Id, and is useful for accessing the field via an interface.
func (v *__buildRepoInput) GetId() uuid.UUID { return v.Id }

// GetBranch returns __buildRepoInput.Branch, and is useful for accessing the field via an interface.
func (v *__buildRepoInput) GetBranch() string { return v.Branch }

// GetNoCache returns __buildRepoInput.NoCache, and is useful for accessing the field via an interface.
func (v *__buildRepoInput) GetNoCache() bool { return v.NoCache }

// __deployRepoBranchInput is used internally by genqlient
type __deployRepoBranchInput struct {
	Branch    string    `json:"branch"`
	ProjectId uuid.UUID `json:"projectId"`
}

// GetBranch returns __deployRepoBranchInput.Branch, and is useful for accessing the field via an interface.
func (v *__deployRepoBranchInput) GetBranch() string { return v.Branch }

// GetProjectId returns __deployRepoBranchInput.ProjectId, and is useful for accessing the field via an interface.
func (v *__deployRepoBranchInput) GetProjectId() uuid.UUID { return v.ProjectId }

// __getBuildLogsInput is used internally by genqlient
type __getBuildLogsInput struct {
	Id uuid.UUID `json:"id"`
}

// GetId returns __getBuildLogsInput.Id, and is useful for accessing the field via an interface.
func (v *__getBuildLogsInput) GetId() uuid.UUID { return v.Id }

// __getDeploymentInfoInput is used internally by genqlient
type __getDeploymentInfoInput struct {
	Id uuid.UUID `json:"id"`
}

// GetId returns __getDeploymentInfoInput.Id, and is useful for accessing the field via an interface.
func (v *__getDeploymentInfoInput) GetId() uuid.UUID { return v.Id }

// __getDeploymentLogsInput is used internally by genqlient
type __getDeploymentLogsInput struct {
	Id uuid.UUID `json:"id"`
}

// GetId returns __getDeploymentLogsInput.Id, and is useful for accessing the field via an interface.
func (v *__getDeploymentLogsInput) GetId() uuid.UUID { return v.Id }

// __getDeploymentReplicaStatusInput is used internally by genqlient
type __getDeploymentReplicaStatusInput struct {
	Id uuid.UUID `json:"id"`
}

// GetId returns __getDeploymentReplicaStatusInput.Id, and is useful for accessing the field via an interface.
func (v *__getDeploymentReplicaStatusInput) GetId() uuid.UUID { return v.Id }

// __getEnvVarsInput is used internally by genqlient
type __getEnvVarsInput struct {
	Id uuid.UUID `json:"id"`
}

// GetId returns __getEnvVarsInput.Id, and is useful for accessing the field via an interface.
func (v *__getEnvVarsInput) GetId() uuid.UUID { return v.Id }

// __getProductionBranchInput is used internally by genqlient
type __getProductionBranchInput struct {
	RepoId uuid.UUID `json:"repoId"`
}

// GetRepoId returns __getProductionBranchInput.RepoId, and is useful for accessing the field via an interface.
func (v *__getProductionBranchInput) GetRepoId() uuid.UUID { return v.RepoId }

// __getProductionDeploymentInput is used internally by genqlient
type __getProductionDeploymentInput struct {
	Path string `json:"path"`
}

// GetPath returns __getProductionDeploymentInput.Path, and is useful for accessing the field via an interface.
func (v *__getProductionDeploymentInput) GetPath() string { return v.Path }

// __getProjectByPathInput is used internally by genqlient
type __getProjectByPathInput struct {
	Path string `json:"path"`
}

// GetPath returns __getProjectByPathInput.Path, and is useful for accessing the field via an interface.
func (v *__getProjectByPathInput) GetPath() string { return v.Path }

// __getProjectRepoInput is used internally by genqlient
type __getProjectRepoInput struct {
	Path string `json:"path"`
}

// GetPath returns __getProjectRepoInput.Path, and is useful for accessing the field via an interface.
func (v *__getProjectRepoInput) GetPath() string { return v.Path }

// __getRuntimeLogsInput is used internally by genqlient
type __getRuntimeLogsInput struct {
	Id uuid.UUID `json:"id"`
}

// GetId returns __getRuntimeLogsInput.Id, and is useful for accessing the field via an interface.
func (v *__getRuntimeLogsInput) GetId() uuid.UUID { return v.Id }

// __setEnvVarsInput is used internally by genqlient
type __setEnvVarsInput struct {
	Id   uuid.UUID     `json:"id"`
	Envs []EnvVarInput `json:"envs"`
}

// GetId returns __setEnvVarsInput.Id, and is useful for accessing the field via an interface.
func (v *__setEnvVarsInput) GetId() uuid.UUID { return v.Id }

// GetEnvs returns __setEnvVarsInput.Envs, and is useful for accessing the field via an interface.
func (v *__setEnvVarsInput) GetEnvs() []EnvVarInput { return v.Envs }

// buildRepoBuildRepo includes the requested fields of the GraphQL type Repo.
type buildRepoBuildRepo struct {
	Deployments []buildRepoBuildRepoDeploymentsDeployment `json:"deployments"`
}

// GetDeployments returns buildRepoBuildRepo.Deployments, and is useful for accessing the field via an interface.
func (v *buildRepoBuildRepo) GetDeployments() []buildRepoBuildRepoDeploymentsDeployment {
	return v.Deployments
}

// buildRepoBuildRepoDeploymentsDeployment includes the requested fields of the GraphQL type Deployment.
type buildRepoBuildRepoDeploymentsDeployment struct {
	Id              uuid.UUID        `json:"id"`
	Status          DeploymentStatus `json:"status"`
	Branch          string           `json:"branch"`
	Endpoints       []string         `json:"endpoints"`
	PrivateEndpoint string           `json:"privateEndpoint"`
}

// GetId returns buildRepoBuildRepoDeploymentsDeployment.Id, and is useful for accessing the field via an interface.
func (v *buildRepoBuildRepoDeploymentsDeployment) GetId() uuid.UUID { return v.Id }

// GetStatus returns buildRepoBuildRepoDeploymentsDeployment.Status, and is useful for accessing the field via an interface.
func (v *buildRepoBuildRepoDeploymentsDeployment) GetStatus() DeploymentStatus { return v.Status }

// GetBranch returns buildRepoBuildRepoDeploymentsDeployment.Branch, and is useful for accessing the field via an interface.
func (v *buildRepoBuildRepoDeploymentsDeployment) GetBranch() string { return v.Branch }

// GetEndpoints returns buildRepoBuildRepoDeploymentsDeployment.Endpoints, and is useful for accessing the field via an interface.
func (v *buildRepoBuildRepoDeploymentsDeployment) GetEndpoints() []string { return v.Endpoints }

// GetPrivateEndpoint returns buildRepoBuildRepoDeploymentsDeployment.PrivateEndpoint, and is useful for accessing the field via an interface.
func (v *buildRepoBuildRepoDeploymentsDeployment) GetPrivateEndpoint() string {
	return v.PrivateEndpoint
}

// buildRepoDefaultBranchBuildRepo includes the requested fields of the GraphQL type Repo.
type buildRepoDefaultBranchBuildRepo struct {
	Deployments []buildRepoDefaultBranchBuildRepoDeploymentsDeployment `json:"deployments"`
}

// GetDeployments returns buildRepoDefaultBranchBuildRepo.Deployments, and is useful for accessing the field via an interface.
func (v *buildRepoDefaultBranchBuildRepo) GetDeployments() []buildRepoDefaultBranchBuildRepoDeploymentsDeployment {
	return v.Deployments
}

// buildRepoDefaultBranchBuildRepoDeploymentsDeployment includes the requested fields of the GraphQL type Deployment.
type buildRepoDefaultBranchBuildRepoDeploymentsDeployment struct {
	Id              uuid.UUID        `json:"id"`
	Status          DeploymentStatus `json:"status"`
	Branch          string           `json:"branch"`
	Endpoints       []string         `json:"endpoints"`
	PrivateEndpoint string           `json:"privateEndpoint"`
}

// GetId returns buildRepoDefaultBranchBuildRepoDeploymentsDeployment.Id, and is useful for accessing the field via an interface.
func (v *buildRepoDefaultBranchBuildRepoDeploymentsDeployment) GetId() uuid.UUID { return v.Id }

// GetStatus returns buildRepoDefaultBranchBuildRepoDeploymentsDeployment.Status, and is useful for accessing the field via an interface.
func (v *buildRepoDefaultBranchBuildRepoDeploymentsDeployment) GetStatus() DeploymentStatus {
	return v.Status
}

// GetBranch returns buildRepoDefaultBranchBuildRepoDeploymentsDeployment.Branch, and is useful for accessing the field via an interface.
func (v *buildRepoDefaultBranchBuildRepoDeploymentsDeployment) GetBranch() string { return v.Branch }

// GetEndpoints returns buildRepoDefaultBranchBuildRepoDeploymentsDeployment.Endpoints, and is useful for accessing the field via an interface.
func (v *buildRepoDefaultBranchBuildRepoDeploymentsDeployment) GetEndpoints() []string {
	return v.Endpoints
}

// GetPrivateEndpoint returns buildRepoDefaultBranchBuildRepoDeploymentsDeployment.PrivateEndpoint, and is useful for accessing the field via an interface.
func (v *buildRepoDefaultBranchBuildRepoDeploymentsDeployment) GetPrivateEndpoint() string {
	return v.PrivateEndpoint
}

// buildRepoDefaultBranchResponse is returned by buildRepoDefaultBranch on success.
type buildRepoDefaultBranchResponse struct {
	BuildRepo buildRepoDefaultBranchBuildRepo `json:"buildRepo"`
}

// GetBuildRepo returns buildRepoDefaultBranchResponse.BuildRepo, and is useful for accessing the field via an interface.
func (v *buildRepoDefaultBranchResponse) GetBuildRepo() buildRepoDefaultBranchBuildRepo {
	return v.BuildRepo
}

// buildRepoResponse is returned by buildRepo on success.
type buildRepoResponse struct {
	BuildRepo buildRepoBuildRepo `json:"buildRepo"`
}

// GetBuildRepo returns buildRepoResponse.BuildRepo, and is useful for accessing the field via an interface.
func (v *buildRepoResponse) GetBuildRepo() buildRepoBuildRepo { return v.BuildRepo }

// deployRepoBranchDeployRepoBranchRepo includes the requested fields of the GraphQL type Repo.
type deployRepoBranchDeployRepoBranchRepo struct {
	Deployments []deployRepoBranchDeployRepoBranchRepoDeploymentsDeployment `json:"deployments"`
}

// GetDeployments returns deployRepoBranchDeployRepoBranchRepo.Deployments, and is useful for accessing the field via an interface.
func (v *deployRepoBranchDeployRepoBranchRepo) GetDeployments() []deployRepoBranchDeployRepoBranchRepoDeploymentsDeployment {
	return v.Deployments
}

// deployRepoBranchDeployRepoBranchRepoDeploymentsDeployment includes the requested fields of the GraphQL type Deployment.
type deployRepoBranchDeployRepoBranchRepoDeploymentsDeployment struct {
	Id              uuid.UUID        `json:"id"`
	Status          DeploymentStatus `json:"status"`
	Branch          string           `json:"branch"`
	Endpoints       []string         `json:"endpoints"`
	PrivateEndpoint string           `json:"privateEndpoint"`
}

// GetId returns deployRepoBranchDeployRepoBranchRepoDeploymentsDeployment.Id, and is useful for accessing the field via an interface.
func (v *deployRepoBranchDeployRepoBranchRepoDeploymentsDeployment) GetId() uuid.UUID { return v.Id }

// GetStatus returns deployRepoBranchDeployRepoBranchRepoDeploymentsDeployment.Status, and is useful for accessing the field via an interface.
func (v *deployRepoBranchDeployRepoBranchRepoDeploymentsDeployment) GetStatus() DeploymentStatus {
	return v.Status
}

// GetBranch returns deployRepoBranchDeployRepoBranchRepoDeploymentsDeployment.Branch, and is useful for accessing the field via an interface.
func (v *deployRepoBranchDeployRepoBranchRepoDeploymentsDeployment) GetBranch() string {
	return v.Branch
}

// GetEndpoints returns deployRepoBranchDeployRepoBranchRepoDeploymentsDeployment.Endpoints, and is useful for accessing the field via an interface.
func (v *deployRepoBranchDeployRepoBranchRepoDeploymentsDeployment) GetEndpoints() []string {
	return v.Endpoints
}

// GetPrivateEndpoint returns deployRepoBranchDeployRepoBranchRepoDeploymentsDeployment.PrivateEndpoint, and is useful for accessing the field via an interface.
func (v *deployRepoBranchDeployRepoBranchRepoDeploymentsDeployment) GetPrivateEndpoint() string {
	return v.PrivateEndpoint
}

// deployRepoBranchResponse is returned by deployRepoBranch on success.
type deployRepoBranchResponse struct {
	DeployRepoBranch deployRepoBranchDeployRepoBranchRepo `json:"deployRepoBranch"`
}

// GetDeployRepoBranch returns deployRepoBranchResponse.DeployRepoBranch, and is useful for accessing the field via an interface.
func (v *deployRepoBranchResponse) GetDeployRepoBranch() deployRepoBranchDeployRepoBranchRepo {
	return v.DeployRepoBranch
}

// getBuildLogsCurrentUser includes the requested fields of the GraphQL type User.
type getBuildLogsCurrentUser struct {
	Deployment getBuildLogsCurrentUserDeployment `json:"deployment"`
}

// GetDeployment returns getBuildLogsCurrentUser.Deployment, and is useful for accessing the field via an interface.
func (v *getBuildLogsCurrentUser) GetDeployment() getBuildLogsCurrentUserDeployment {
	return v.Deployment
}

// getBuildLogsCurrentUserDeployment includes the requested fields of the GraphQL type Deployment.
type getBuildLogsCurrentUserDeployment struct {
	Build getBuildLogsCurrentUserDeploymentBuild `json:"build"`
}

// GetBuild returns getBuildLogsCurrentUserDeployment.Build, and is useful for accessing the field via an interface.
func (v *getBuildLogsCurrentUserDeployment) GetBuild() getBuildLogsCurrentUserDeploymentBuild {
	return v.Build
}

// getBuildLogsCurrentUserDeploymentBuild includes the requested fields of the GraphQL type Build.
type getBuildLogsCurrentUserDeploymentBuild struct {
	Logs getBuildLogsCurrentUserDeploymentBuildLogs `json:"logs"`
}

// GetLogs returns getBuildLogsCurrentUserDeploymentBuild.Logs, and is useful for accessing the field via an interface.
func (v *getBuildLogsCurrentUserDeploymentBuild) GetLogs() getBuildLogsCurrentUserDeploymentBuildLogs {
	return v.Logs
}

// getBuildLogsCurrentUserDeploymentBuildLogs includes the requested fields of the GraphQL type Logs.
type getBuildLogsCurrentUserDeploymentBuildLogs struct {
	Entries []getBuildLogsCurrentUserDeploymentBuildLogsEntriesLogEntry `json:"entries"`
}

// GetEntries returns getBuildLogsCurrentUserDeploymentBuildLogs.Entries, and is useful for accessing the field via an interface.
func (v *getBuildLogsCurrentUserDeploymentBuildLogs) GetEntries() []getBuildLogsCurrentUserDeploymentBuildLogsEntriesLogEntry {
	return v.Entries
}

// getBuildLogsCurrentUserDeploymentBuildLogsEntriesLogEntry includes the requested fields of the GraphQL type LogEntry.
type getBuildLogsCurrentUserDeploymentBuildLogsEntriesLogEntry struct {
	Text      string    `json:"text"`
	Timestamp time.Time `json:"timestamp"`
}

// GetText returns getBuildLogsCurrentUserDeploymentBuildLogsEntriesLogEntry.Text, and is useful for accessing the field via an interface.
func (v *getBuildLogsCurrentUserDeploymentBuildLogsEntriesLogEntry) GetText() string { return v.Text }

// GetTimestamp returns getBuildLogsCurrentUserDeploymentBuildLogsEntriesLogEntry.Timestamp, and is useful for accessing the field via an interface.
func (v *getBuildLogsCurrentUserDeploymentBuildLogsEntriesLogEntry) GetTimestamp() time.Time {
	return v.Timestamp
}

// getBuildLogsResponse is returned by getBuildLogs on success.
type getBuildLogsResponse struct {
	CurrentUser getBuildLogsCurrentUser `json:"currentUser"`
}

// GetCurrentUser returns getBuildLogsResponse.CurrentUser, and is useful for accessing the field via an interface.
func (v *getBuildLogsResponse) GetCurrentUser() getBuildLogsCurrentUser { return v.CurrentUser }

// getCurrentUserCurrentUser includes the requested fields of the GraphQL type User.
type getCurrentUserCurrentUser struct {
	Id    uuid.UUID `json:"id"`
	Login string    `json:"login"`
}

// GetId returns getCurrentUserCurrentUser.Id, and is useful for accessing the field via an interface.
func (v *getCurrentUserCurrentUser) GetId() uuid.UUID { return v.Id }

// GetLogin returns getCurrentUserCurrentUser.Login, and is useful for accessing the field via an interface.
func (v *getCurrentUserCurrentUser) GetLogin() string { return v.Login }

// getCurrentUserResponse is returned by getCurrentUser on success.
type getCurrentUserResponse struct {
	CurrentUser getCurrentUserCurrentUser `json:"currentUser"`
}

// GetCurrentUser returns getCurrentUserResponse.CurrentUser, and is useful for accessing the field via an interface.
func (v *getCurrentUserResponse) GetCurrentUser() getCurrentUserCurrentUser { return v.CurrentUser }

// getDeploymentInfoCurrentUser includes the requested fields of the GraphQL type User.
type getDeploymentInfoCurrentUser struct {
	Deployment getDeploymentInfoCurrentUserDeployment `json:"deployment"`
}

// GetDeployment returns getDeploymentInfoCurrentUser.Deployment, and is useful for accessing the field via an interface.
func (v *getDeploymentInfoCurrentUser) GetDeployment() getDeploymentInfoCurrentUserDeployment {
	return v.Deployment
}

// getDeploymentInfoCurrentUserDeployment includes the requested fields of the GraphQL type Deployment.
type getDeploymentInfoCurrentUserDeployment struct {
	Id              uuid.UUID        `json:"id"`
	Status          DeploymentStatus `json:"status"`
	Endpoints       []string         `json:"endpoints"`
	PrivateEndpoint string           `json:"privateEndpoint"`
}

// GetId returns getDeploymentInfoCurrentUserDeployment.Id, and is useful for accessing the field via an interface.
func (v *getDeploymentInfoCurrentUserDeployment) GetId() uuid.UUID { return v.Id }

// GetStatus returns getDeploymentInfoCurrentUserDeployment.Status, and is useful for accessing the field via an interface.
func (v *getDeploymentInfoCurrentUserDeployment) GetStatus() DeploymentStatus { return v.Status }

// GetEndpoints returns getDeploymentInfoCurrentUserDeployment.Endpoints, and is useful for accessing the field via an interface.
func (v *getDeploymentInfoCurrentUserDeployment) GetEndpoints() []string { return v.Endpoints }

// GetPrivateEndpoint returns getDeploymentInfoCurrentUserDeployment.PrivateEndpoint, and is useful for accessing the field via an interface.
func (v *getDeploymentInfoCurrentUserDeployment) GetPrivateEndpoint() string {
	return v.PrivateEndpoint
}

// getDeploymentInfoResponse is returned by getDeploymentInfo on success.
type getDeploymentInfoResponse struct {
	CurrentUser getDeploymentInfoCurrentUser `json:"currentUser"`
}

// GetCurrentUser returns getDeploymentInfoResponse.CurrentUser, and is useful for accessing the field via an interface.
func (v *getDeploymentInfoResponse) GetCurrentUser() getDeploymentInfoCurrentUser {
	return v.CurrentUser
}

// getDeploymentLogsCurrentUser includes the requested fields of the GraphQL type User.
type getDeploymentLogsCurrentUser struct {
	Deployment getDeploymentLogsCurrentUserDeployment `json:"deployment"`
}

// GetDeployment returns getDeploymentLogsCurrentUser.Deployment, and is useful for accessing the field via an interface.
func (v *getDeploymentLogsCurrentUser) GetDeployment() getDeploymentLogsCurrentUserDeployment {
	return v.Deployment
}

// getDeploymentLogsCurrentUserDeployment includes the requested fields of the GraphQL type Deployment.
type getDeploymentLogsCurrentUserDeployment struct {
	DeployStep getDeploymentLogsCurrentUserDeploymentDeployStepPipelineStep `json:"deployStep"`
}

// GetDeployStep returns getDeploymentLogsCurrentUserDeployment.DeployStep, and is useful for accessing the field via an interface.
func (v *getDeploymentLogsCurrentUserDeployment) GetDeployStep() getDeploymentLogsCurrentUserDeploymentDeployStepPipelineStep {
	return v.DeployStep
}

// getDeploymentLogsCurrentUserDeploymentDeployStepPipelineStep includes the requested fields of the GraphQL type PipelineStep.
type getDeploymentLogsCurrentUserDeploymentDeployStepPipelineStep struct {
	Logs getDeploymentLogsCurrentUserDeploymentDeployStepPipelineStepLogs `json:"logs"`
}

// GetLogs returns getDeploymentLogsCurrentUserDeploymentDeployStepPipelineStep.Logs, and is useful for accessing the field via an interface.
func (v *getDeploymentLogsCurrentUserDeploymentDeployStepPipelineStep) GetLogs() getDeploymentLogsCurrentUserDeploymentDeployStepPipelineStepLogs {
	return v.Logs
}

// getDeploymentLogsCurrentUserDeploymentDeployStepPipelineStepLogs includes the requested fields of the GraphQL type Logs.
type getDeploymentLogsCurrentUserDeploymentDeployStepPipelineStepLogs struct {
	Entries []getDeploymentLogsCurrentUserDeploymentDeployStepPipelineStepLogsEntriesLogEntry `json:"entries"`
}

// GetEntries returns getDeploymentLogsCurrentUserDeploymentDeployStepPipelineStepLogs.Entries, and is useful for accessing the field via an interface.
func (v *getDeploymentLogsCurrentUserDeploymentDeployStepPipelineStepLogs) GetEntries() []getDeploymentLogsCurrentUserDeploymentDeployStepPipelineStepLogsEntriesLogEntry {
	return v.Entries
}

// getDeploymentLogsCurrentUserDeploymentDeployStepPipelineStepLogsEntriesLogEntry includes the requested fields of the GraphQL type LogEntry.
type getDeploymentLogsCurrentUserDeploymentDeployStepPipelineStepLogsEntriesLogEntry struct {
	Text      string    `json:"text"`
	Timestamp time.Time `json:"timestamp"`
}

// GetText returns getDeploymentLogsCurrentUserDeploymentDeployStepPipelineStepLogsEntriesLogEntry.Text, and is useful for accessing the field via an interface.
func (v *getDeploymentLogsCurrentUserDeploymentDeployStepPipelineStepLogsEntriesLogEntry) GetText() string {
	return v.Text
}

// GetTimestamp returns getDeploymentLogsCurrentUserDeploymentDeployStepPipelineStepLogsEntriesLogEntry.Timestamp, and is useful for accessing the field via an interface.
func (v *getDeploymentLogsCurrentUserDeploymentDeployStepPipelineStepLogsEntriesLogEntry) GetTimestamp() time.Time {
	return v.Timestamp
}

// getDeploymentLogsResponse is returned by getDeploymentLogs on success.
type getDeploymentLogsResponse struct {
	CurrentUser getDeploymentLogsCurrentUser `json:"currentUser"`
}

// GetCurrentUser returns getDeploymentLogsResponse.CurrentUser, and is useful for accessing the field via an interface.
func (v *getDeploymentLogsResponse) GetCurrentUser() getDeploymentLogsCurrentUser {
	return v.CurrentUser
}

// getDeploymentReplicaStatusCurrentUser includes the requested fields of the GraphQL type User.
type getDeploymentReplicaStatusCurrentUser struct {
	Deployment getDeploymentReplicaStatusCurrentUserDeployment `json:"deployment"`
}

// GetDeployment returns getDeploymentReplicaStatusCurrentUser.Deployment, and is useful for accessing the field via an interface.
func (v *getDeploymentReplicaStatusCurrentUser) GetDeployment() getDeploymentReplicaStatusCurrentUserDeployment {
	return v.Deployment
}

// getDeploymentReplicaStatusCurrentUserDeployment includes the requested fields of the GraphQL type Deployment.
type getDeploymentReplicaStatusCurrentUserDeployment struct {
	DeployStatus getDeploymentReplicaStatusCurrentUserDeploymentDeployStatus `json:"deployStatus"`
}

// GetDeployStatus returns getDeploymentReplicaStatusCurrentUserDeployment.DeployStatus, and is useful for accessing the field via an interface.
func (v *getDeploymentReplicaStatusCurrentUserDeployment) GetDeployStatus() getDeploymentReplicaStatusCurrentUserDeploymentDeployStatus {
	return v.DeployStatus
}

// getDeploymentReplicaStatusCurrentUserDeploymentDeployStatus includes the requested fields of the GraphQL type DeployStatus.
type getDeploymentReplicaStatusCurrentUserDeploymentDeployStatus struct {
	Replicas        int    `json:"replicas"`
	ReadyReplicas   int    `json:"readyReplicas"`
	RunningReplicas int    `json:"runningReplicas"`
	State           string `json:"state"`
}

// GetReplicas returns getDeploymentReplicaStatusCurrentUserDeploymentDeployStatus.Replicas, and is useful for accessing the field via an interface.
func (v *getDeploymentReplicaStatusCurrentUserDeploymentDeployStatus) GetReplicas() int {
	return v.Replicas
}

// GetReadyReplicas returns getDeploymentReplicaStatusCurrentUserDeploymentDeployStatus.ReadyReplicas, and is useful for accessing the field via an interface.
func (v *getDeploymentReplicaStatusCurrentUserDeploymentDeployStatus) GetReadyReplicas() int {
	return v.ReadyReplicas
}

// GetRunningReplicas returns getDeploymentReplicaStatusCurrentUserDeploymentDeployStatus.RunningReplicas, and is useful for accessing the field via an interface.
func (v *getDeploymentReplicaStatusCurrentUserDeploymentDeployStatus) GetRunningReplicas() int {
	return v.RunningReplicas
}

// GetState returns getDeploymentReplicaStatusCurrentUserDeploymentDeployStatus.State, and is useful for accessing the field via an interface.
func (v *getDeploymentReplicaStatusCurrentUserDeploymentDeployStatus) GetState() string {
	return v.State
}

// getDeploymentReplicaStatusResponse is returned by getDeploymentReplicaStatus on success.
type getDeploymentReplicaStatusResponse struct {
	CurrentUser getDeploymentReplicaStatusCurrentUser `json:"currentUser"`
}

// GetCurrentUser returns getDeploymentReplicaStatusResponse.CurrentUser, and is useful for accessing the field via an interface.
func (v *getDeploymentReplicaStatusResponse) GetCurrentUser() getDeploymentReplicaStatusCurrentUser {
	return v.CurrentUser
}

// getEnvVarsCurrentUser includes the requested fields of the GraphQL type User.
type getEnvVarsCurrentUser struct {
	Repo getEnvVarsCurrentUserRepo `json:"repo"`
}

// GetRepo returns getEnvVarsCurrentUser.Repo, and is useful for accessing the field via an interface.
func (v *getEnvVarsCurrentUser) GetRepo() getEnvVarsCurrentUserRepo { return v.Repo }

// getEnvVarsCurrentUserRepo includes the requested fields of the GraphQL type Repo.
type getEnvVarsCurrentUserRepo struct {
	Envs []getEnvVarsCurrentUserRepoEnvsEnvVar `json:"envs"`
}

// GetEnvs returns getEnvVarsCurrentUserRepo.Envs, and is useful for accessing the field via an interface.
func (v *getEnvVarsCurrentUserRepo) GetEnvs() []getEnvVarsCurrentUserRepoEnvsEnvVar { return v.Envs }

// getEnvVarsCurrentUserRepoEnvsEnvVar includes the requested fields of the GraphQL type EnvVar.
type getEnvVarsCurrentUserRepoEnvsEnvVar struct {
	Name  string `json:"name"`
	Value string `json:"value"`
}

// GetName returns getEnvVarsCurrentUserRepoEnvsEnvVar.Name, and is useful for accessing the field via an interface.
func (v *getEnvVarsCurrentUserRepoEnvsEnvVar) GetName() string { return v.Name }

// GetValue returns getEnvVarsCurrentUserRepoEnvsEnvVar.Value, and is useful for accessing the field via an interface.
func (v *getEnvVarsCurrentUserRepoEnvsEnvVar) GetValue() string { return v.Value }

// getEnvVarsResponse is returned by getEnvVars on success.
type getEnvVarsResponse struct {
	CurrentUser getEnvVarsCurrentUser `json:"currentUser"`
}

// GetCurrentUser returns getEnvVarsResponse.CurrentUser, and is useful for accessing the field via an interface.
func (v *getEnvVarsResponse) GetCurrentUser() getEnvVarsCurrentUser { return v.CurrentUser }

// getProductionBranchCurrentUser includes the requested fields of the GraphQL type User.
type getProductionBranchCurrentUser struct {
	Repo getProductionBranchCurrentUserRepo `json:"repo"`
}

// GetRepo returns getProductionBranchCurrentUser.Repo, and is useful for accessing the field via an interface.
func (v *getProductionBranchCurrentUser) GetRepo() getProductionBranchCurrentUserRepo { return v.Repo }

// getProductionBranchCurrentUserRepo includes the requested fields of the GraphQL type Repo.
type getProductionBranchCurrentUserRepo struct {
	Id                 uuid.UUID                                                        `json:"id"`
	ProductionBranchV2 getProductionBranchCurrentUserRepoProductionBranchV2RepoBranchV2 `json:"productionBranchV2"`
}

// GetId returns getProductionBranchCurrentUserRepo.Id, and is useful for accessing the field via an interface.
func (v *getProductionBranchCurrentUserRepo) GetId() uuid.UUID { return v.Id }

// GetProductionBranchV2 returns getProductionBranchCurrentUserRepo.ProductionBranchV2, and is useful for accessing the field via an interface.
func (v *getProductionBranchCurrentUserRepo) GetProductionBranchV2() getProductionBranchCurrentUserRepoProductionBranchV2RepoBranchV2 {
	return v.ProductionBranchV2
}

// getProductionBranchCurrentUserRepoProductionBranchV2RepoBranchV2 includes the requested fields of the GraphQL type RepoBranchV2.
type getProductionBranchCurrentUserRepoProductionBranchV2RepoBranchV2 struct {
	Name string `json:"name"`
}

// GetName returns getProductionBranchCurrentUserRepoProductionBranchV2RepoBranchV2.Name, and is useful for accessing the field via an interface.
func (v *getProductionBranchCurrentUserRepoProductionBranchV2RepoBranchV2) GetName() string {
	return v.Name
}

// getProductionBranchResponse is returned by getProductionBranch on success.
type getProductionBranchResponse struct {
	CurrentUser getProductionBranchCurrentUser `json:"currentUser"`
}

// GetCurrentUser returns getProductionBranchResponse.CurrentUser, and is useful for accessing the field via an interface.
func (v *getProductionBranchResponse) GetCurrentUser() getProductionBranchCurrentUser {
	return v.CurrentUser
}

// getProductionDeploymentProject includes the requested fields of the GraphQL type Project.
type getProductionDeploymentProject struct {
	Repo getProductionDeploymentProjectRepo `json:"repo"`
}

// GetRepo returns getProductionDeploymentProject.Repo, and is useful for accessing the field via an interface.
func (v *getProductionDeploymentProject) GetRepo() getProductionDeploymentProjectRepo { return v.Repo }

// getProductionDeploymentProjectRepo includes the requested fields of the GraphQL type Repo.
type getProductionDeploymentProjectRepo struct {
	ProductionDeployment getProductionDeploymentProjectRepoProductionDeployment `json:"productionDeployment"`
}

// GetProductionDeployment returns getProductionDeploymentProjectRepo.ProductionDeployment, and is useful for accessing the field via an interface.
func (v *getProductionDeploymentProjectRepo) GetProductionDeployment() getProductionDeploymentProjectRepoProductionDeployment {
	return v.ProductionDeployment
}

// getProductionDeploymentProjectRepoProductionDeployment includes the requested fields of the GraphQL type Deployment.
type getProductionDeploymentProjectRepoProductionDeployment struct {
	Id              uuid.UUID        `json:"id"`
	Status          DeploymentStatus `json:"status"`
	Endpoints       []string         `json:"endpoints"`
	PrivateEndpoint string           `json:"privateEndpoint"`
}

// GetId returns getProductionDeploymentProjectRepoProductionDeployment.Id, and is useful for accessing the field via an interface.
func (v *getProductionDeploymentProjectRepoProductionDeployment) GetId() uuid.UUID { return v.Id }

// GetStatus returns getProductionDeploymentProjectRepoProductionDeployment.Status, and is useful for accessing the field via an interface.
func (v *getProductionDeploymentProjectRepoProductionDeployment) GetStatus() DeploymentStatus {
	return v.Status
}

// GetEndpoints returns getProductionDeploymentProjectRepoProductionDeployment.Endpoints, and is useful for accessing the field via an interface.
func (v *getProductionDeploymentProjectRepoProductionDeployment) GetEndpoints() []string {
	return v.Endpoints
}

// GetPrivateEndpoint returns getProductionDeploymentProjectRepoProductionDeployment.PrivateEndpoint, and is useful for accessing the field via an interface.
func (v *getProductionDeploymentProjectRepoProductionDeployment) GetPrivateEndpoint() string {
	return v.PrivateEndpoint
}

// getProductionDeploymentResponse is returned by getProductionDeployment on success.
type getProductionDeploymentResponse struct {
	Project getProductionDeploymentProject `json:"project"`
}

// GetProject returns getProductionDeploymentResponse.Project, and is useful for accessing the field via an interface.
func (v *getProductionDeploymentResponse) GetProject() getProductionDeploymentProject {
	return v.Project
}

// getProjectByPathProject includes the requested fields of the GraphQL type Project.
type getProjectByPathProject struct {
	Id uuid.UUID `json:"id"`
}

// GetId returns getProjectByPathProject.Id, and is useful for accessing the field via an interface.
func (v *getProjectByPathProject) GetId() uuid.UUID { return v.Id }

// getProjectByPathResponse is returned by getProjectByPath on success.
type getProjectByPathResponse struct {
	Project getProjectByPathProject `json:"project"`
}

// GetProject returns getProjectByPathResponse.Project, and is useful for accessing the field via an interface.
func (v *getProjectByPathResponse) GetProject() getProjectByPathProject { return v.Project }

// getProjectRepoProject includes the requested fields of the GraphQL type Project.
type getProjectRepoProject struct {
	Repo getProjectRepoProjectRepo `json:"repo"`
}

// GetRepo returns getProjectRepoProject.Repo, and is useful for accessing the field via an interface.
func (v *getProjectRepoProject) GetRepo() getProjectRepoProjectRepo { return v.Repo }

// getProjectRepoProjectRepo includes the requested fields of the GraphQL type Repo.
type getProjectRepoProjectRepo struct {
	Id uuid.UUID `json:"id"`
}

// GetId returns getProjectRepoProjectRepo.Id, and is useful for accessing the field via an interface.
func (v *getProjectRepoProjectRepo) GetId() uuid.UUID { return v.Id }

// getProjectRepoResponse is returned by getProjectRepo on success.
type getProjectRepoResponse struct {
	Project getProjectRepoProject `json:"project"`
}

// GetProject returns getProjectRepoResponse.Project, and is useful for accessing the field via an interface.
func (v *getProjectRepoResponse) GetProject() getProjectRepoProject { return v.Project }

// getRuntimeLogsCurrentUser includes the requested fields of the GraphQL type User.
type getRuntimeLogsCurrentUser struct {
	Deployment getRuntimeLogsCurrentUserDeployment `json:"deployment"`
}

// GetDeployment returns getRuntimeLogsCurrentUser.Deployment, and is useful for accessing the field via an interface.
func (v *getRuntimeLogsCurrentUser) GetDeployment() getRuntimeLogsCurrentUserDeployment {
	return v.Deployment
}

// getRuntimeLogsCurrentUserDeployment includes the requested fields of the GraphQL type Deployment.
type getRuntimeLogsCurrentUserDeployment struct {
	Logs []getRuntimeLogsCurrentUserDeploymentLogsLogEntry `json:"logs"`
}

// GetLogs returns getRuntimeLogsCurrentUserDeployment.Logs, and is useful for accessing the field via an interface.
func (v *getRuntimeLogsCurrentUserDeployment) GetLogs() []getRuntimeLogsCurrentUserDeploymentLogsLogEntry {
	return v.Logs
}

// getRuntimeLogsCurrentUserDeploymentLogsLogEntry includes the requested fields of the GraphQL type LogEntry.
type getRuntimeLogsCurrentUserDeploymentLogsLogEntry struct {
	Text      string    `json:"text"`
	Timestamp time.Time `json:"timestamp"`
}

// GetText returns getRuntimeLogsCurrentUserDeploymentLogsLogEntry.Text, and is useful for accessing the field via an interface.
func (v *getRuntimeLogsCurrentUserDeploymentLogsLogEntry) GetText() string { return v.Text }

// GetTimestamp returns getRuntimeLogsCurrentUserDeploymentLogsLogEntry.Timestamp, and is useful for accessing the field via an interface.
func (v *getRuntimeLogsCurrentUserDeploymentLogsLogEntry) GetTimestamp() time.Time {
	return v.Timestamp
}

// getRuntimeLogsResponse is returned by getRuntimeLogs on success.
type getRuntimeLogsResponse struct {
	CurrentUser getRuntimeLogsCurrentUser `json:"currentUser"`
}

// GetCurrentUser returns getRuntimeLogsResponse.CurrentUser, and is useful for accessing the field via an interface.
func (v *getRuntimeLogsResponse) GetCurrentUser() getRuntimeLogsCurrentUser { return v.CurrentUser }

// setEnvVarsResponse is returned by setEnvVars on success.
type setEnvVarsResponse struct {
	SetRepoEnvs setEnvVarsSetRepoEnvsRepo `json:"setRepoEnvs"`
}

// GetSetRepoEnvs returns setEnvVarsResponse.SetRepoEnvs, and is useful for accessing the field via an interface.
func (v *setEnvVarsResponse) GetSetRepoEnvs() setEnvVarsSetRepoEnvsRepo { return v.SetRepoEnvs }

// setEnvVarsSetRepoEnvsRepo includes the requested fields of the GraphQL type Repo.
type setEnvVarsSetRepoEnvsRepo struct {
	Envs []setEnvVarsSetRepoEnvsRepoEnvsEnvVar `json:"envs"`
}

// GetEnvs returns setEnvVarsSetRepoEnvsRepo.Envs, and is useful for accessing the field via an interface.
func (v *setEnvVarsSetRepoEnvsRepo) GetEnvs() []setEnvVarsSetRepoEnvsRepoEnvsEnvVar { return v.Envs }

// setEnvVarsSetRepoEnvsRepoEnvsEnvVar includes the requested fields of the GraphQL type EnvVar.
type setEnvVarsSetRepoEnvsRepoEnvsEnvVar struct {
	Id uuid.UUID `json:"id"`
}

// GetId returns setEnvVarsSetRepoEnvsRepoEnvsEnvVar.Id, and is useful for accessing the field via an interface.
func (v *setEnvVarsSetRepoEnvsRepoEnvsEnvVar) GetId() uuid.UUID { return v.Id }

func buildRepo(
	ctx context.Context,
	client graphql.Client,
	id uuid.UUID,
	branch string,
	noCache bool,
) (*buildRepoResponse, error) {
	__input := __buildRepoInput{
		Id:      id,
		Branch:  branch,
		NoCache: noCache,
	}
	var err error

	var retval buildRepoResponse
	err = client.MakeRequest(
		ctx,
		"buildRepo",
		`
mutation buildRepo ($id: ID!, $branch: String, $noCache: Boolean) {
	buildRepo(id: $id, branch: $branch, noCache: $noCache) {
		deployments {
			id
			status
			branch
			endpoints
			privateEndpoint
		}
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

func buildRepoDefaultBranch(
	ctx context.Context,
	client graphql.Client,
	id uuid.UUID,
	noCache bool,
) (*buildRepoDefaultBranchResponse, error) {
	__input := __buildRepoDefaultBranchInput{
		Id:      id,
		NoCache: noCache,
	}
	var err error

	var retval buildRepoDefaultBranchResponse
	err = client.MakeRequest(
		ctx,
		"buildRepoDefaultBranch",
		`
mutation buildRepoDefaultBranch ($id: ID!, $noCache: Boolean) {
	buildRepo(id: $id, noCache: $noCache) {
		deployments {
			id
			status
			branch
			endpoints
			privateEndpoint
		}
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

func deployRepoBranch(
	ctx context.Context,
	client graphql.Client,
	branch string,
	projectId uuid.UUID,
) (*deployRepoBranchResponse, error) {
	__input := __deployRepoBranchInput{
		Branch:    branch,
		ProjectId: projectId,
	}
	var err error

	var retval deployRepoBranchResponse
	err = client.MakeRequest(
		ctx,
		"deployRepoBranch",
		`
mutation deployRepoBranch ($branch: String!, $projectId: UUID!) {
	deployRepoBranch(input: {id:$projectId,branch:$branch}) {
		deployments {
			id
			status
			branch
			endpoints
			privateEndpoint
		}
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

func getBuildLogs(
	ctx context.Context,
	client graphql.Client,
	id uuid.UUID,
) (*getBuildLogsResponse, error) {
	__input := __getBuildLogsInput{
		Id: id,
	}
	var err error

	var retval getBuildLogsResponse
	err = client.MakeRequest(
		ctx,
		"getBuildLogs",
		`
query getBuildLogs ($id: ID!) {
	currentUser {
		deployment(id: $id) {
			build {
				logs {
					entries {
						text
						timestamp
					}
				}
			}
		}
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

func getCurrentUser(
	ctx context.Context,
	client graphql.Client,
) (*getCurrentUserResponse, error) {
	var err error

	var retval getCurrentUserResponse
	err = client.MakeRequest(
		ctx,
		"getCurrentUser",
		`
query getCurrentUser {
	currentUser {
		id
		login
	}
}
`,
		&retval,
		nil,
	)
	return &retval, err
}

func getDeploymentInfo(
	ctx context.Context,
	client graphql.Client,
	id uuid.UUID,
) (*getDeploymentInfoResponse, error) {
	__input := __getDeploymentInfoInput{
		Id: id,
	}
	var err error

	var retval getDeploymentInfoResponse
	err = client.MakeRequest(
		ctx,
		"getDeploymentInfo",
		`
query getDeploymentInfo ($id: ID!) {
	currentUser {
		deployment(id: $id) {
			id
			status
			endpoints
			privateEndpoint
		}
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

func getDeploymentLogs(
	ctx context.Context,
	client graphql.Client,
	id uuid.UUID,
) (*getDeploymentLogsResponse, error) {
	__input := __getDeploymentLogsInput{
		Id: id,
	}
	var err error

	var retval getDeploymentLogsResponse
	err = client.MakeRequest(
		ctx,
		"getDeploymentLogs",
		`
query getDeploymentLogs ($id: ID!) {
	currentUser {
		deployment(id: $id) {
			deployStep {
				logs {
					entries {
						text
						timestamp
					}
				}
			}
		}
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

func getDeploymentReplicaStatus(
	ctx context.Context,
	client graphql.Client,
	id uuid.UUID,
) (*getDeploymentReplicaStatusResponse, error) {
	__input := __getDeploymentReplicaStatusInput{
		Id: id,
	}
	var err error

	var retval getDeploymentReplicaStatusResponse
	err = client.MakeRequest(
		ctx,
		"getDeploymentReplicaStatus",
		`
query getDeploymentReplicaStatus ($id: ID!) {
	currentUser {
		deployment(id: $id) {
			deployStatus {
				replicas
				readyReplicas
				runningReplicas
				state
			}
		}
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

func getEnvVars(
	ctx context.Context,
	client graphql.Client,
	id uuid.UUID,
) (*getEnvVarsResponse, error) {
	__input := __getEnvVarsInput{
		Id: id,
	}
	var err error

	var retval getEnvVarsResponse
	err = client.MakeRequest(
		ctx,
		"getEnvVars",
		`
query getEnvVars ($id: ID!) {
	currentUser {
		repo(id: $id) {
			envs {
				name
				value
			}
		}
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

func getProductionBranch(
	ctx context.Context,
	client graphql.Client,
	repoId uuid.UUID,
) (*getProductionBranchResponse, error) {
	__input := __getProductionBranchInput{
		RepoId: repoId,
	}
	var err error

	var retval getProductionBranchResponse
	err = client.MakeRequest(
		ctx,
		"getProductionBranch",
		`
query getProductionBranch ($repoId: ID!) {
	currentUser {
		repo(id: $repoId) {
			id
			productionBranchV2 {
				name
			}
		}
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

func getProductionDeployment(
	ctx context.Context,
	client graphql.Client,
	path string,
) (*getProductionDeploymentResponse, error) {
	__input := __getProductionDeploymentInput{
		Path: path,
	}
	var err error

	var retval getProductionDeploymentResponse
	err = client.MakeRequest(
		ctx,
		"getProductionDeployment",
		`
query getProductionDeployment ($path: String!) {
	project(path: $path) {
		repo {
			productionDeployment {
				id
				status
				endpoints
				privateEndpoint
			}
		}
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

func getProjectByPath(
	ctx context.Context,
	client graphql.Client,
	path string,
) (*getProjectByPathResponse, error) {
	__input := __getProjectByPathInput{
		Path: path,
	}
	var err error

	var retval getProjectByPathResponse
	err = client.MakeRequest(
		ctx,
		"getProjectByPath",
		`
query getProjectByPath ($path: String) {
	project(path: $path) {
		id
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

func getProjectRepo(
	ctx context.Context,
	client graphql.Client,
	path string,
) (*getProjectRepoResponse, error) {
	__input := __getProjectRepoInput{
		Path: path,
	}
	var err error

	var retval getProjectRepoResponse
	err = client.MakeRequest(
		ctx,
		"getProjectRepo",
		`
query getProjectRepo ($path: String!) {
	project(path: $path) {
		repo {
			id
		}
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

func getRuntimeLogs(
	ctx context.Context,
	client graphql.Client,
	id uuid.UUID,
) (*getRuntimeLogsResponse, error) {
	__input := __getRuntimeLogsInput{
		Id: id,
	}
	var err error

	var retval getRuntimeLogsResponse
	err = client.MakeRequest(
		ctx,
		"getRuntimeLogs",
		`
query getRuntimeLogs ($id: ID!) {
	currentUser {
		deployment(id: $id) {
			logs {
				text
				timestamp
			}
		}
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

func setEnvVars(
	ctx context.Context,
	client graphql.Client,
	id uuid.UUID,
	envs []EnvVarInput,
) (*setEnvVarsResponse, error) {
	__input := __setEnvVarsInput{
		Id:   id,
		Envs: envs,
	}
	var err error

	var retval setEnvVarsResponse
	err = client.MakeRequest(
		ctx,
		"setEnvVars",
		`
mutation setEnvVars ($id: ID!, $envs: [EnvVarInput!]!) {
	setRepoEnvs(input: {id:$id,envs:$envs}) {
		envs {
			id
		}
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}
